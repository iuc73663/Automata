# -*- coding: utf-8 -*-
"""
Even Fibonacci numbers

Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


import math

def find_highest_prime_factor(num):
    highest = 0
    if (num % 2) == 0:
        return num / 2
    else:
        for i in range(3, int(math.sqrt(num))):
            while num % i == 0:
                print(i) 
                num = num / i
    return highest

print(find_highest_prime_factor(600851475143))